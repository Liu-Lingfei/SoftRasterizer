#ifndef RENDERER_H
#define RENDREER_H

#include "Eigen/Core"
#include "tiny_obj_loader.h"
#include "Light.h"
#include "Material.h"
#include "Input.h"
#include "Camera.h"

using namespace Eigen;

class Renderer
{
public:
	void render();
	void setReader(const tinyobj::ObjReader* r);
	void setModelMatrix(const Matrix4f& m);
	void setMainLight(const DirectionalLight& l);
	void setMaterial(const Material& m);
	void setConstantBuffer(const ConstantBuffer& cb);

private:

    bool earlyZ = false;

	tinyobj::ObjReader* reader = nullptr;
	Matrix4f modelMatrix;

    Camera cam;
    DirectionalLight mainLight;
    Material m;
    ConstantBuffer cb;



    const int imageWidth = 1920;
    const int imageHeight = 1080;
    const int shadowWidth = 1024;

    int pixelSize;

    std::vector<uchar> clearBuffer;
    std::vector<float> depthBuffer;
    std::vector<std::vector<float>> shadowMaps;

    Vector4f clearColor;
    QPoint lastFrameMousePos;
    clock_t lastFrameTime;
    float deltaTime;

    Matrix4f modelMatrix;


    ConstantBuffer shadowCb;
    Material shadowMaterial;
    DirectionalLightShadowCamera shadowCam;
};

#endif // !RENDERER_H
